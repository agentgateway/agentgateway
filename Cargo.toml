[package]
name = "agentgateway"
version = "0.4.12"
edition = "2024"
rust-version = "1.85"

[workspace]
resolver = "2"
members = [
  "a2a-sdk",
  "agent-core",
  "agent-xds",
  "agent-hbone",
  "agent-proxy",
]

[workspace.dependencies]
a2a-sdk = { version = "0.4.0", path = "a2a-sdk" }
agent-core = { path = "agent-core" }
agent-hbone = { path = "agent-hbone" }
anyhow = "1.0"
arcstr = { version = "1.2", features = ["serde"]  }
async-stream = "0.3.6"
async-trait = "0.1"
aws-config = "1.6.1"
aws-sdk-lambda = "1.67.0"
aws-smithy-runtime-api = "1.7.4"
axum = { version = "0.8" , features = ["macros"]  }
axum-core = "0.5.2"
axum-extra = { version = "0.10" , features = ["json-lines", "typed-header"] }
base64 = "0.22"
bytes = { version = "1.10.1", features = ["serde"] }
chrono = { version = "0.4.40", features = ["serde"]  }
clap = { version = "4.5", features = ["derive"] }
eventsource-stream = "0.2.3"
flurry = "0.5.2"
futures = "0.3.31"
futures-core = "0.3"
futures-util = "0.3.31"
google-cloud-auth = "0.18.0"
h2 = "0.4.9"
headers = "0.4"
hex = "0.4.3"
homedir = "0.3.4"
http = "1.3.1"
http-body = "1"
http-body-util = "0.1.3"
hyper = { version = "1.6" , features = ["full"] }
hyper-util = { version = "0.1", features = ["full"]   }
include_dir = "0.7.4"
ipnet = { version = "2.11", features = ["serde"] }
itertools = "0.14"
jsonwebtoken = "9.3"
lazy_static = "1.4"
mime = "0.3.17"
minijinja = { version = "2.9.0" , features = ["loader"]}
once_cell = "1.21.3"
openapiv3 = "2.0.0"
opentelemetry = "0.29"
opentelemetry-http = "0.29"
opentelemetry-otlp = { version = "0.29" , features = ["grpc-tonic"] }
opentelemetry_sdk = "0.29"
pbjson = "0.7"
pbjson-build = "0.7"
pbjson-types = "0.7"
pin-project-lite = "0.2.16"
pingora-pool = "0.4.0"
ppp = "2.3.0"
prometheus-client = "0.23.1"
prost = "0.13.5"
prost-build = "0.13"
prost-types = "0.13.5"
rand = "0.9"
regex = "1.11.1"
reqwest = { version = "0.12.14", default-features = false, features = ["http2", "charset", "macos-system-configuration", "rustls-tls"] }
rmcp = { git = "https://github.com/modelcontextprotocol/rust-sdk", rev = "6a423048fa7f3da99190f28bcb2d6d8cdbb99bbe", features = ["client", "transport-sse", "transport-child-process"]  }
rustc_version = "0.4"
rustls = { version = "0.23.26", features = ["tls12", "ring"] }
rustls-pemfile = "2.2"
secrecy = "0.10.3"
serde = { version = "1.0.219", features = ["derive", "rc"] }
serde_json = "1.0.140"
serde_regex = "1.1.0"
serde_yaml = "0.9.34"
split-iter = "0.1.0"
sse-stream = "0.1.3"
thiserror = "2.0.12"
tls-listener = "0.11"
tokio = { version = "1.44.2", features = ["full", "macros", "sync"]  }
tokio-rustls = { version = "0.26.2", default-features = false }
tokio-stream = { version = "0.1", features = ["net", "sync"]  }
tokio-util = { version = "0.7", features = ["codec"] }
tonic = { version = "0.13.0", features = ["prost", "codegen", "transport"] }
tonic-build = { version = "0.13", features = ["prost", "transport"]  }
tower = { version = "0.5"}
tower-http = { version = "0.5" , features = ["cors"] }
tower-serve-static = "0.1.1"
tracing = "0.1.41"
tracing-core = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
url = "2.5"
wiremock = "0.6.3"

[features]
default = []
gcp = ["dep:google-cloud-auth"]
aws = ["dep:aws-config", "dep:aws-sdk-lambda", "dep:aws-smithy-runtime-api"]
ui = ["dep:include_dir", "dep:tower-serve-static"]

[dependencies]
a2a-sdk.workspace = true
anyhow.workspace = true
arcstr.workspace = true
async-stream.workspace = true
async-trait.workspace = true
aws-config = { workspace = true, optional = true }
aws-sdk-lambda = { workspace = true, optional = true }
aws-smithy-runtime-api = { workspace = true, optional = true }
axum.workspace = true
axum-extra.workspace = true
base64.workspace = true
bytes.workspace = true
clap.workspace = true
eventsource-stream.workspace = true
futures.workspace = true
google-cloud-auth = { workspace = true, optional = true }
headers.workspace = true
homedir.workspace = true
http.workspace = true
include_dir = { workspace = true, optional = true }
itertools.workspace = true
jsonwebtoken.workspace = true
lazy_static.workspace = true
mime.workspace = true
once_cell.workspace = true
openapiv3.workspace = true
opentelemetry.workspace = true
opentelemetry-http.workspace = true
opentelemetry-otlp.workspace = true
opentelemetry_sdk.workspace = true
pbjson.workspace = true
pbjson-types.workspace = true
ppp.workspace = true
prometheus-client.workspace = true
prost.workspace = true
rand.workspace = true
regex.workspace = true
reqwest.workspace = true
rmcp.workspace = true
rustls.workspace = true
secrecy.workspace = true
serde.workspace = true
serde_json.workspace = true
serde_yaml.workspace = true
sse-stream.workspace = true
thiserror.workspace = true
tls-listener.workspace = true
tokio.workspace = true
tokio-rustls.workspace = true
tokio-stream.workspace = true
tokio-util.workspace = true
tonic.workspace = true
tower-http.workspace = true
tower-serve-static = { workspace = true, optional = true }
tracing.workspace = true
tracing-subscriber.workspace = true

[build-dependencies]
tonic-build.workspace = true
prost-build.workspace = true
anyhow.workspace = true
rustc_version.workspace = true
pbjson-build.workspace = true

[lib]
path = "src/lib.rs"
bench = false

[[bin]]
name = "agentgateway"
path = "src/main.rs"
bench = false

[dev-dependencies]
serde_json.workspace = true
tokio.workspace = true
wiremock.workspace = true
