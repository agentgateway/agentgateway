// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: resource.proto

package api

import (
	_ "github.com/golang/protobuf/ptypes/any"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/wrappers"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Protocol int32

const (
	Protocol_UNKNOWN Protocol = 0
	Protocol_HTTP    Protocol = 1
	Protocol_HTTPS   Protocol = 2
	Protocol_TLS     Protocol = 3
	Protocol_TCP     Protocol = 4
	Protocol_HBONE   Protocol = 5
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "UNKNOWN",
		1: "HTTP",
		2: "HTTPS",
		3: "TLS",
		4: "TCP",
		5: "HBONE",
	}
	Protocol_value = map[string]int32{
		"UNKNOWN": 0,
		"HTTP":    1,
		"HTTPS":   2,
		"TLS":     3,
		"TCP":     4,
		"HBONE":   5,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_resource_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{0}
}

type Resource struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Resource_Bind
	//	*Resource_Listener
	//	*Resource_Route
	Kind          isResource_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_resource_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{0}
}

func (x *Resource) GetKind() isResource_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Resource) GetBind() *Bind {
	if x != nil {
		if x, ok := x.Kind.(*Resource_Bind); ok {
			return x.Bind
		}
	}
	return nil
}

func (x *Resource) GetListener() *Listener {
	if x != nil {
		if x, ok := x.Kind.(*Resource_Listener); ok {
			return x.Listener
		}
	}
	return nil
}

func (x *Resource) GetRoute() *Route {
	if x != nil {
		if x, ok := x.Kind.(*Resource_Route); ok {
			return x.Route
		}
	}
	return nil
}

type isResource_Kind interface {
	isResource_Kind()
}

type Resource_Bind struct {
	Bind *Bind `protobuf:"bytes,1,opt,name=bind,proto3,oneof"`
}

type Resource_Listener struct {
	Listener *Listener `protobuf:"bytes,2,opt,name=listener,proto3,oneof"`
}

type Resource_Route struct {
	Route *Route `protobuf:"bytes,3,opt,name=route,proto3,oneof"`
}

func (*Resource_Bind) isResource_Kind() {}

func (*Resource_Listener) isResource_Kind() {}

func (*Resource_Route) isResource_Kind() {}

type Bind struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Port          uint32                 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bind) Reset() {
	*x = Bind{}
	mi := &file_resource_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bind) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bind) ProtoMessage() {}

func (x *Bind) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bind.ProtoReflect.Descriptor instead.
func (*Bind) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{1}
}

func (x *Bind) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Bind) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Listener struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique key
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// User facing name; may not be unique
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BindKey string `protobuf:"bytes,3,opt,name=bind_key,json=bindKey,proto3" json:"bind_key,omitempty"`
	// User facing Gateway name
	GatewayName   string     `protobuf:"bytes,4,opt,name=gateway_name,json=gatewayName,proto3" json:"gateway_name,omitempty"`
	Hostname      string     `protobuf:"bytes,5,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Protocol      Protocol   `protobuf:"varint,6,opt,name=protocol,proto3,enum=agentgateway.dev.resource.Protocol" json:"protocol,omitempty"`
	Tls           *TLSConfig `protobuf:"bytes,7,opt,name=tls,proto3" json:"tls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Listener) Reset() {
	*x = Listener{}
	mi := &file_resource_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Listener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listener) ProtoMessage() {}

func (x *Listener) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listener.ProtoReflect.Descriptor instead.
func (*Listener) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{2}
}

func (x *Listener) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Listener) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Listener) GetBindKey() string {
	if x != nil {
		return x.BindKey
	}
	return ""
}

func (x *Listener) GetGatewayName() string {
	if x != nil {
		return x.GatewayName
	}
	return ""
}

func (x *Listener) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Listener) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_UNKNOWN
}

func (x *Listener) GetTls() *TLSConfig {
	if x != nil {
		return x.Tls
	}
	return nil
}

type TLSConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cert          []byte                 `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	PrivateKey    []byte                 `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_resource_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig.ProtoReflect.Descriptor instead.
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{3}
}

func (x *TLSConfig) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *TLSConfig) GetPrivateKey() []byte {
	if x != nil {
		return x.PrivateKey
	}
	return nil
}

type Route struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique key
	Key         string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ListenerKey string `protobuf:"bytes,2,opt,name=listener_key,json=listenerKey,proto3" json:"listener_key,omitempty"`
	// User facing rule name. May not be unique.
	RuleName string `protobuf:"bytes,3,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	// User facing route name May not be unique.
	RouteName     string          `protobuf:"bytes,4,opt,name=route_name,json=routeName,proto3" json:"route_name,omitempty"`
	Hostnames     []string        `protobuf:"bytes,5,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	Matches       []*RouteMatch   `protobuf:"bytes,6,rep,name=matches,proto3" json:"matches,omitempty"`
	Filters       []*RouteFilter  `protobuf:"bytes,7,rep,name=filters,proto3" json:"filters,omitempty"`
	Backends      []*RouteBackend `protobuf:"bytes,8,rep,name=backends,proto3" json:"backends,omitempty"`
	TrafficPolicy *TrafficPolicy  `protobuf:"bytes,9,opt,name=traffic_policy,json=trafficPolicy,proto3" json:"traffic_policy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Route) Reset() {
	*x = Route{}
	mi := &file_resource_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{4}
}

func (x *Route) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Route) GetListenerKey() string {
	if x != nil {
		return x.ListenerKey
	}
	return ""
}

func (x *Route) GetRuleName() string {
	if x != nil {
		return x.RuleName
	}
	return ""
}

func (x *Route) GetRouteName() string {
	if x != nil {
		return x.RouteName
	}
	return ""
}

func (x *Route) GetHostnames() []string {
	if x != nil {
		return x.Hostnames
	}
	return nil
}

func (x *Route) GetMatches() []*RouteMatch {
	if x != nil {
		return x.Matches
	}
	return nil
}

func (x *Route) GetFilters() []*RouteFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *Route) GetBackends() []*RouteBackend {
	if x != nil {
		return x.Backends
	}
	return nil
}

func (x *Route) GetTrafficPolicy() *TrafficPolicy {
	if x != nil {
		return x.TrafficPolicy
	}
	return nil
}

type TrafficPolicy struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BackendRequestTimeout *duration.Duration     `protobuf:"bytes,1,opt,name=backend_request_timeout,json=backendRequestTimeout,proto3" json:"backend_request_timeout,omitempty"`
	RequestTimeout        *duration.Duration     `protobuf:"bytes,2,opt,name=request_timeout,json=requestTimeout,proto3" json:"request_timeout,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TrafficPolicy) Reset() {
	*x = TrafficPolicy{}
	mi := &file_resource_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrafficPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficPolicy) ProtoMessage() {}

func (x *TrafficPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficPolicy.ProtoReflect.Descriptor instead.
func (*TrafficPolicy) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{5}
}

func (x *TrafficPolicy) GetBackendRequestTimeout() *duration.Duration {
	if x != nil {
		return x.BackendRequestTimeout
	}
	return nil
}

func (x *TrafficPolicy) GetRequestTimeout() *duration.Duration {
	if x != nil {
		return x.RequestTimeout
	}
	return nil
}

type RouteMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          *PathMatch             `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Headers       []*HeaderMatch         `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
	Method        *MethodMatch           `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	QueryParams   []*QueryMatch          `protobuf:"bytes,4,rep,name=query_params,json=queryParams,proto3" json:"query_params,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteMatch) Reset() {
	*x = RouteMatch{}
	mi := &file_resource_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteMatch) ProtoMessage() {}

func (x *RouteMatch) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteMatch.ProtoReflect.Descriptor instead.
func (*RouteMatch) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{6}
}

func (x *RouteMatch) GetPath() *PathMatch {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *RouteMatch) GetHeaders() []*HeaderMatch {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *RouteMatch) GetMethod() *MethodMatch {
	if x != nil {
		return x.Method
	}
	return nil
}

func (x *RouteMatch) GetQueryParams() []*QueryMatch {
	if x != nil {
		return x.QueryParams
	}
	return nil
}

type PathMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*PathMatch_Exact
	//	*PathMatch_PathPrefix
	//	*PathMatch_Regex
	Kind          isPathMatch_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PathMatch) Reset() {
	*x = PathMatch{}
	mi := &file_resource_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PathMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathMatch) ProtoMessage() {}

func (x *PathMatch) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathMatch.ProtoReflect.Descriptor instead.
func (*PathMatch) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{7}
}

func (x *PathMatch) GetKind() isPathMatch_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *PathMatch) GetExact() string {
	if x != nil {
		if x, ok := x.Kind.(*PathMatch_Exact); ok {
			return x.Exact
		}
	}
	return ""
}

func (x *PathMatch) GetPathPrefix() string {
	if x != nil {
		if x, ok := x.Kind.(*PathMatch_PathPrefix); ok {
			return x.PathPrefix
		}
	}
	return ""
}

func (x *PathMatch) GetRegex() string {
	if x != nil {
		if x, ok := x.Kind.(*PathMatch_Regex); ok {
			return x.Regex
		}
	}
	return ""
}

type isPathMatch_Kind interface {
	isPathMatch_Kind()
}

type PathMatch_Exact struct {
	Exact string `protobuf:"bytes,1,opt,name=exact,proto3,oneof"`
}

type PathMatch_PathPrefix struct {
	PathPrefix string `protobuf:"bytes,2,opt,name=path_prefix,json=pathPrefix,proto3,oneof"`
}

type PathMatch_Regex struct {
	Regex string `protobuf:"bytes,3,opt,name=regex,proto3,oneof"`
}

func (*PathMatch_Exact) isPathMatch_Kind() {}

func (*PathMatch_PathPrefix) isPathMatch_Kind() {}

func (*PathMatch_Regex) isPathMatch_Kind() {}

type QueryMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*QueryMatch_Exact
	//	*QueryMatch_Regex
	Value         isQueryMatch_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMatch) Reset() {
	*x = QueryMatch{}
	mi := &file_resource_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMatch) ProtoMessage() {}

func (x *QueryMatch) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMatch.ProtoReflect.Descriptor instead.
func (*QueryMatch) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{8}
}

func (x *QueryMatch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryMatch) GetValue() isQueryMatch_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *QueryMatch) GetExact() string {
	if x != nil {
		if x, ok := x.Value.(*QueryMatch_Exact); ok {
			return x.Exact
		}
	}
	return ""
}

func (x *QueryMatch) GetRegex() string {
	if x != nil {
		if x, ok := x.Value.(*QueryMatch_Regex); ok {
			return x.Regex
		}
	}
	return ""
}

type isQueryMatch_Value interface {
	isQueryMatch_Value()
}

type QueryMatch_Exact struct {
	Exact string `protobuf:"bytes,2,opt,name=exact,proto3,oneof"`
}

type QueryMatch_Regex struct {
	Regex string `protobuf:"bytes,3,opt,name=regex,proto3,oneof"`
}

func (*QueryMatch_Exact) isQueryMatch_Value() {}

func (*QueryMatch_Regex) isQueryMatch_Value() {}

type MethodMatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exact         string                 `protobuf:"bytes,1,opt,name=exact,proto3" json:"exact,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MethodMatch) Reset() {
	*x = MethodMatch{}
	mi := &file_resource_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MethodMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MethodMatch) ProtoMessage() {}

func (x *MethodMatch) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MethodMatch.ProtoReflect.Descriptor instead.
func (*MethodMatch) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{9}
}

func (x *MethodMatch) GetExact() string {
	if x != nil {
		return x.Exact
	}
	return ""
}

type HeaderMatch struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Value:
	//
	//	*HeaderMatch_Exact
	//	*HeaderMatch_Regex
	Value         isHeaderMatch_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderMatch) Reset() {
	*x = HeaderMatch{}
	mi := &file_resource_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderMatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderMatch) ProtoMessage() {}

func (x *HeaderMatch) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderMatch.ProtoReflect.Descriptor instead.
func (*HeaderMatch) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{10}
}

func (x *HeaderMatch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeaderMatch) GetValue() isHeaderMatch_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *HeaderMatch) GetExact() string {
	if x != nil {
		if x, ok := x.Value.(*HeaderMatch_Exact); ok {
			return x.Exact
		}
	}
	return ""
}

func (x *HeaderMatch) GetRegex() string {
	if x != nil {
		if x, ok := x.Value.(*HeaderMatch_Regex); ok {
			return x.Regex
		}
	}
	return ""
}

type isHeaderMatch_Value interface {
	isHeaderMatch_Value()
}

type HeaderMatch_Exact struct {
	Exact string `protobuf:"bytes,2,opt,name=exact,proto3,oneof"`
}

type HeaderMatch_Regex struct {
	Regex string `protobuf:"bytes,3,opt,name=regex,proto3,oneof"`
}

func (*HeaderMatch_Exact) isHeaderMatch_Value() {}

func (*HeaderMatch_Regex) isHeaderMatch_Value() {}

type RouteFilter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*RouteFilter_RequestHeaderModifier
	//	*RouteFilter_ResponseHeaderModifier
	//	*RouteFilter_RequestRedirect
	//	*RouteFilter_UrlRewrite
	//	*RouteFilter_RequestMirror
	Kind          isRouteFilter_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteFilter) Reset() {
	*x = RouteFilter{}
	mi := &file_resource_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteFilter) ProtoMessage() {}

func (x *RouteFilter) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteFilter.ProtoReflect.Descriptor instead.
func (*RouteFilter) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{11}
}

func (x *RouteFilter) GetKind() isRouteFilter_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *RouteFilter) GetRequestHeaderModifier() *HeaderModifier {
	if x != nil {
		if x, ok := x.Kind.(*RouteFilter_RequestHeaderModifier); ok {
			return x.RequestHeaderModifier
		}
	}
	return nil
}

func (x *RouteFilter) GetResponseHeaderModifier() *HeaderModifier {
	if x != nil {
		if x, ok := x.Kind.(*RouteFilter_ResponseHeaderModifier); ok {
			return x.ResponseHeaderModifier
		}
	}
	return nil
}

func (x *RouteFilter) GetRequestRedirect() *RequestRedirect {
	if x != nil {
		if x, ok := x.Kind.(*RouteFilter_RequestRedirect); ok {
			return x.RequestRedirect
		}
	}
	return nil
}

func (x *RouteFilter) GetUrlRewrite() *UrlRewrite {
	if x != nil {
		if x, ok := x.Kind.(*RouteFilter_UrlRewrite); ok {
			return x.UrlRewrite
		}
	}
	return nil
}

func (x *RouteFilter) GetRequestMirror() *RequestMirror {
	if x != nil {
		if x, ok := x.Kind.(*RouteFilter_RequestMirror); ok {
			return x.RequestMirror
		}
	}
	return nil
}

type isRouteFilter_Kind interface {
	isRouteFilter_Kind()
}

type RouteFilter_RequestHeaderModifier struct {
	RequestHeaderModifier *HeaderModifier `protobuf:"bytes,1,opt,name=request_header_modifier,json=requestHeaderModifier,proto3,oneof"`
}

type RouteFilter_ResponseHeaderModifier struct {
	ResponseHeaderModifier *HeaderModifier `protobuf:"bytes,2,opt,name=response_header_modifier,json=responseHeaderModifier,proto3,oneof"`
}

type RouteFilter_RequestRedirect struct {
	RequestRedirect *RequestRedirect `protobuf:"bytes,3,opt,name=request_redirect,json=requestRedirect,proto3,oneof"`
}

type RouteFilter_UrlRewrite struct {
	UrlRewrite *UrlRewrite `protobuf:"bytes,4,opt,name=url_rewrite,json=urlRewrite,proto3,oneof"`
}

type RouteFilter_RequestMirror struct {
	RequestMirror *RequestMirror `protobuf:"bytes,5,opt,name=request_mirror,json=requestMirror,proto3,oneof"`
}

func (*RouteFilter_RequestHeaderModifier) isRouteFilter_Kind() {}

func (*RouteFilter_ResponseHeaderModifier) isRouteFilter_Kind() {}

func (*RouteFilter_RequestRedirect) isRouteFilter_Kind() {}

func (*RouteFilter_UrlRewrite) isRouteFilter_Kind() {}

func (*RouteFilter_RequestMirror) isRouteFilter_Kind() {}

type HeaderModifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Add           []*Header              `protobuf:"bytes,1,rep,name=add,proto3" json:"add,omitempty"`
	Set           []*Header              `protobuf:"bytes,2,rep,name=set,proto3" json:"set,omitempty"`
	Remove        []string               `protobuf:"bytes,3,rep,name=remove,proto3" json:"remove,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderModifier) Reset() {
	*x = HeaderModifier{}
	mi := &file_resource_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderModifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderModifier) ProtoMessage() {}

func (x *HeaderModifier) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderModifier.ProtoReflect.Descriptor instead.
func (*HeaderModifier) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{12}
}

func (x *HeaderModifier) GetAdd() []*Header {
	if x != nil {
		return x.Add
	}
	return nil
}

func (x *HeaderModifier) GetSet() []*Header {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *HeaderModifier) GetRemove() []string {
	if x != nil {
		return x.Remove
	}
	return nil
}

type RequestMirror struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*RequestMirror_Service
	Kind isRequestMirror_Kind `protobuf_oneof:"kind"`
	// 0-100
	Percentage    float64 `protobuf:"fixed64,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Port          int32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestMirror) Reset() {
	*x = RequestMirror{}
	mi := &file_resource_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestMirror) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestMirror) ProtoMessage() {}

func (x *RequestMirror) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestMirror.ProtoReflect.Descriptor instead.
func (*RequestMirror) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{13}
}

func (x *RequestMirror) GetKind() isRequestMirror_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *RequestMirror) GetService() string {
	if x != nil {
		if x, ok := x.Kind.(*RequestMirror_Service); ok {
			return x.Service
		}
	}
	return ""
}

func (x *RequestMirror) GetPercentage() float64 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *RequestMirror) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type isRequestMirror_Kind interface {
	isRequestMirror_Kind()
}

type RequestMirror_Service struct {
	Service string `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

func (*RequestMirror_Service) isRequestMirror_Kind() {}

type RequestRedirect struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Scheme string                 `protobuf:"bytes,1,opt,name=scheme,proto3" json:"scheme,omitempty"`
	Host   string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	// Types that are valid to be assigned to Path:
	//
	//	*RequestRedirect_Full
	//	*RequestRedirect_Prefix
	Path          isRequestRedirect_Path `protobuf_oneof:"path"`
	Port          uint32                 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Status        uint32                 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RequestRedirect) Reset() {
	*x = RequestRedirect{}
	mi := &file_resource_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RequestRedirect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestRedirect) ProtoMessage() {}

func (x *RequestRedirect) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestRedirect.ProtoReflect.Descriptor instead.
func (*RequestRedirect) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{14}
}

func (x *RequestRedirect) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *RequestRedirect) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RequestRedirect) GetPath() isRequestRedirect_Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *RequestRedirect) GetFull() string {
	if x != nil {
		if x, ok := x.Path.(*RequestRedirect_Full); ok {
			return x.Full
		}
	}
	return ""
}

func (x *RequestRedirect) GetPrefix() string {
	if x != nil {
		if x, ok := x.Path.(*RequestRedirect_Prefix); ok {
			return x.Prefix
		}
	}
	return ""
}

func (x *RequestRedirect) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RequestRedirect) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type isRequestRedirect_Path interface {
	isRequestRedirect_Path()
}

type RequestRedirect_Full struct {
	Full string `protobuf:"bytes,3,opt,name=full,proto3,oneof"`
}

type RequestRedirect_Prefix struct {
	Prefix string `protobuf:"bytes,4,opt,name=prefix,proto3,oneof"`
}

func (*RequestRedirect_Full) isRequestRedirect_Path() {}

func (*RequestRedirect_Prefix) isRequestRedirect_Path() {}

type UrlRewrite struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Host  string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	// Types that are valid to be assigned to Path:
	//
	//	*UrlRewrite_Full
	//	*UrlRewrite_Prefix
	Path          isUrlRewrite_Path `protobuf_oneof:"path"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UrlRewrite) Reset() {
	*x = UrlRewrite{}
	mi := &file_resource_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UrlRewrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UrlRewrite) ProtoMessage() {}

func (x *UrlRewrite) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UrlRewrite.ProtoReflect.Descriptor instead.
func (*UrlRewrite) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{15}
}

func (x *UrlRewrite) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UrlRewrite) GetPath() isUrlRewrite_Path {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *UrlRewrite) GetFull() string {
	if x != nil {
		if x, ok := x.Path.(*UrlRewrite_Full); ok {
			return x.Full
		}
	}
	return ""
}

func (x *UrlRewrite) GetPrefix() string {
	if x != nil {
		if x, ok := x.Path.(*UrlRewrite_Prefix); ok {
			return x.Prefix
		}
	}
	return ""
}

type isUrlRewrite_Path interface {
	isUrlRewrite_Path()
}

type UrlRewrite_Full struct {
	Full string `protobuf:"bytes,2,opt,name=full,proto3,oneof"`
}

type UrlRewrite_Prefix struct {
	Prefix string `protobuf:"bytes,3,opt,name=prefix,proto3,oneof"`
}

func (*UrlRewrite_Full) isUrlRewrite_Path() {}

func (*UrlRewrite_Prefix) isUrlRewrite_Path() {}

type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_resource_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{16}
}

func (x *Header) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type RouteBackend struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*RouteBackend_Service
	Kind          isRouteBackend_Kind `protobuf_oneof:"kind"`
	Weight        int32               `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`
	Port          int32               `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Filters       []*RouteFilter      `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouteBackend) Reset() {
	*x = RouteBackend{}
	mi := &file_resource_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouteBackend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteBackend) ProtoMessage() {}

func (x *RouteBackend) ProtoReflect() protoreflect.Message {
	mi := &file_resource_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteBackend.ProtoReflect.Descriptor instead.
func (*RouteBackend) Descriptor() ([]byte, []int) {
	return file_resource_proto_rawDescGZIP(), []int{17}
}

func (x *RouteBackend) GetKind() isRouteBackend_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *RouteBackend) GetService() string {
	if x != nil {
		if x, ok := x.Kind.(*RouteBackend_Service); ok {
			return x.Service
		}
	}
	return ""
}

func (x *RouteBackend) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *RouteBackend) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RouteBackend) GetFilters() []*RouteFilter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type isRouteBackend_Kind interface {
	isRouteBackend_Kind()
}

type RouteBackend_Service struct {
	Service string `protobuf:"bytes,1,opt,name=service,proto3,oneof"`
}

func (*RouteBackend_Service) isRouteBackend_Kind() {}

var File_resource_proto protoreflect.FileDescriptor

const file_resource_proto_rawDesc = "" +
	"\n" +
	"\x0eresource.proto\x12\x19agentgateway.dev.resource\x1a\x1egoogle/protobuf/wrappers.proto\x1a\x19google/protobuf/any.proto\x1a\x1egoogle/protobuf/duration.proto\"\xc6\x01\n" +
	"\bResource\x125\n" +
	"\x04bind\x18\x01 \x01(\v2\x1f.agentgateway.dev.resource.BindH\x00R\x04bind\x12A\n" +
	"\blistener\x18\x02 \x01(\v2#.agentgateway.dev.resource.ListenerH\x00R\blistener\x128\n" +
	"\x05route\x18\x03 \x01(\v2 .agentgateway.dev.resource.RouteH\x00R\x05routeB\x06\n" +
	"\x04kind\",\n" +
	"\x04Bind\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04port\x18\x02 \x01(\rR\x04port\"\x83\x02\n" +
	"\bListener\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x19\n" +
	"\bbind_key\x18\x03 \x01(\tR\abindKey\x12!\n" +
	"\fgateway_name\x18\x04 \x01(\tR\vgatewayName\x12\x1a\n" +
	"\bhostname\x18\x05 \x01(\tR\bhostname\x12?\n" +
	"\bprotocol\x18\x06 \x01(\x0e2#.agentgateway.dev.resource.ProtocolR\bprotocol\x126\n" +
	"\x03tls\x18\a \x01(\v2$.agentgateway.dev.resource.TLSConfigR\x03tls\"@\n" +
	"\tTLSConfig\x12\x12\n" +
	"\x04cert\x18\x01 \x01(\fR\x04cert\x12\x1f\n" +
	"\vprivate_key\x18\x02 \x01(\fR\n" +
	"privateKey\"\xaf\x03\n" +
	"\x05Route\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12!\n" +
	"\flistener_key\x18\x02 \x01(\tR\vlistenerKey\x12\x1b\n" +
	"\trule_name\x18\x03 \x01(\tR\bruleName\x12\x1d\n" +
	"\n" +
	"route_name\x18\x04 \x01(\tR\trouteName\x12\x1c\n" +
	"\thostnames\x18\x05 \x03(\tR\thostnames\x12?\n" +
	"\amatches\x18\x06 \x03(\v2%.agentgateway.dev.resource.RouteMatchR\amatches\x12@\n" +
	"\afilters\x18\a \x03(\v2&.agentgateway.dev.resource.RouteFilterR\afilters\x12C\n" +
	"\bbackends\x18\b \x03(\v2'.agentgateway.dev.resource.RouteBackendR\bbackends\x12O\n" +
	"\x0etraffic_policy\x18\t \x01(\v2(.agentgateway.dev.resource.TrafficPolicyR\rtrafficPolicy\"\xa6\x01\n" +
	"\rTrafficPolicy\x12Q\n" +
	"\x17backend_request_timeout\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x15backendRequestTimeout\x12B\n" +
	"\x0frequest_timeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x0erequestTimeout\"\x92\x02\n" +
	"\n" +
	"RouteMatch\x128\n" +
	"\x04path\x18\x01 \x01(\v2$.agentgateway.dev.resource.PathMatchR\x04path\x12@\n" +
	"\aheaders\x18\x02 \x03(\v2&.agentgateway.dev.resource.HeaderMatchR\aheaders\x12>\n" +
	"\x06method\x18\x03 \x01(\v2&.agentgateway.dev.resource.MethodMatchR\x06method\x12H\n" +
	"\fquery_params\x18\x04 \x03(\v2%.agentgateway.dev.resource.QueryMatchR\vqueryParams\"f\n" +
	"\tPathMatch\x12\x16\n" +
	"\x05exact\x18\x01 \x01(\tH\x00R\x05exact\x12!\n" +
	"\vpath_prefix\x18\x02 \x01(\tH\x00R\n" +
	"pathPrefix\x12\x16\n" +
	"\x05regex\x18\x03 \x01(\tH\x00R\x05regexB\x06\n" +
	"\x04kind\"Y\n" +
	"\n" +
	"QueryMatch\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x05exact\x18\x02 \x01(\tH\x00R\x05exact\x12\x16\n" +
	"\x05regex\x18\x03 \x01(\tH\x00R\x05regexB\a\n" +
	"\x05value\"#\n" +
	"\vMethodMatch\x12\x14\n" +
	"\x05exact\x18\x01 \x01(\tR\x05exact\"Z\n" +
	"\vHeaderMatch\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x05exact\x18\x02 \x01(\tH\x00R\x05exact\x12\x16\n" +
	"\x05regex\x18\x03 \x01(\tH\x00R\x05regexB\a\n" +
	"\x05value\"\xd7\x03\n" +
	"\vRouteFilter\x12c\n" +
	"\x17request_header_modifier\x18\x01 \x01(\v2).agentgateway.dev.resource.HeaderModifierH\x00R\x15requestHeaderModifier\x12e\n" +
	"\x18response_header_modifier\x18\x02 \x01(\v2).agentgateway.dev.resource.HeaderModifierH\x00R\x16responseHeaderModifier\x12W\n" +
	"\x10request_redirect\x18\x03 \x01(\v2*.agentgateway.dev.resource.RequestRedirectH\x00R\x0frequestRedirect\x12H\n" +
	"\vurl_rewrite\x18\x04 \x01(\v2%.agentgateway.dev.resource.UrlRewriteH\x00R\n" +
	"urlRewrite\x12Q\n" +
	"\x0erequest_mirror\x18\x05 \x01(\v2(.agentgateway.dev.resource.RequestMirrorH\x00R\rrequestMirrorB\x06\n" +
	"\x04kind\"\x92\x01\n" +
	"\x0eHeaderModifier\x123\n" +
	"\x03add\x18\x01 \x03(\v2!.agentgateway.dev.resource.HeaderR\x03add\x123\n" +
	"\x03set\x18\x02 \x03(\v2!.agentgateway.dev.resource.HeaderR\x03set\x12\x16\n" +
	"\x06remove\x18\x03 \x03(\tR\x06remove\"g\n" +
	"\rRequestMirror\x12\x1a\n" +
	"\aservice\x18\x01 \x01(\tH\x00R\aservice\x12\x1e\n" +
	"\n" +
	"percentage\x18\x02 \x01(\x01R\n" +
	"percentage\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04portB\x06\n" +
	"\x04kind\"\xa1\x01\n" +
	"\x0fRequestRedirect\x12\x16\n" +
	"\x06scheme\x18\x01 \x01(\tR\x06scheme\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x14\n" +
	"\x04full\x18\x03 \x01(\tH\x00R\x04full\x12\x18\n" +
	"\x06prefix\x18\x04 \x01(\tH\x00R\x06prefix\x12\x12\n" +
	"\x04port\x18\x05 \x01(\rR\x04port\x12\x16\n" +
	"\x06status\x18\x06 \x01(\rR\x06statusB\x06\n" +
	"\x04path\"X\n" +
	"\n" +
	"UrlRewrite\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x14\n" +
	"\x04full\x18\x02 \x01(\tH\x00R\x04full\x12\x18\n" +
	"\x06prefix\x18\x03 \x01(\tH\x00R\x06prefixB\x06\n" +
	"\x04path\"2\n" +
	"\x06Header\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xa0\x01\n" +
	"\fRouteBackend\x12\x1a\n" +
	"\aservice\x18\x01 \x01(\tH\x00R\aservice\x12\x16\n" +
	"\x06weight\x18\x02 \x01(\x05R\x06weight\x12\x12\n" +
	"\x04port\x18\x03 \x01(\x05R\x04port\x12@\n" +
	"\afilters\x18\x04 \x03(\v2&.agentgateway.dev.resource.RouteFilterR\afiltersB\x06\n" +
	"\x04kind*I\n" +
	"\bProtocol\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04HTTP\x10\x01\x12\t\n" +
	"\x05HTTPS\x10\x02\x12\a\n" +
	"\x03TLS\x10\x03\x12\a\n" +
	"\x03TCP\x10\x04\x12\t\n" +
	"\x05HBONE\x10\x05B1Z/github.com/agentgateway/agentgateway/go/api;apib\x06proto3"

var (
	file_resource_proto_rawDescOnce sync.Once
	file_resource_proto_rawDescData []byte
)

func file_resource_proto_rawDescGZIP() []byte {
	file_resource_proto_rawDescOnce.Do(func() {
		file_resource_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_proto_rawDesc), len(file_resource_proto_rawDesc)))
	})
	return file_resource_proto_rawDescData
}

var file_resource_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_resource_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_resource_proto_goTypes = []any{
	(Protocol)(0),             // 0: agentgateway.dev.resource.Protocol
	(*Resource)(nil),          // 1: agentgateway.dev.resource.Resource
	(*Bind)(nil),              // 2: agentgateway.dev.resource.Bind
	(*Listener)(nil),          // 3: agentgateway.dev.resource.Listener
	(*TLSConfig)(nil),         // 4: agentgateway.dev.resource.TLSConfig
	(*Route)(nil),             // 5: agentgateway.dev.resource.Route
	(*TrafficPolicy)(nil),     // 6: agentgateway.dev.resource.TrafficPolicy
	(*RouteMatch)(nil),        // 7: agentgateway.dev.resource.RouteMatch
	(*PathMatch)(nil),         // 8: agentgateway.dev.resource.PathMatch
	(*QueryMatch)(nil),        // 9: agentgateway.dev.resource.QueryMatch
	(*MethodMatch)(nil),       // 10: agentgateway.dev.resource.MethodMatch
	(*HeaderMatch)(nil),       // 11: agentgateway.dev.resource.HeaderMatch
	(*RouteFilter)(nil),       // 12: agentgateway.dev.resource.RouteFilter
	(*HeaderModifier)(nil),    // 13: agentgateway.dev.resource.HeaderModifier
	(*RequestMirror)(nil),     // 14: agentgateway.dev.resource.RequestMirror
	(*RequestRedirect)(nil),   // 15: agentgateway.dev.resource.RequestRedirect
	(*UrlRewrite)(nil),        // 16: agentgateway.dev.resource.UrlRewrite
	(*Header)(nil),            // 17: agentgateway.dev.resource.Header
	(*RouteBackend)(nil),      // 18: agentgateway.dev.resource.RouteBackend
	(*duration.Duration)(nil), // 19: google.protobuf.Duration
}
var file_resource_proto_depIdxs = []int32{
	2,  // 0: agentgateway.dev.resource.Resource.bind:type_name -> agentgateway.dev.resource.Bind
	3,  // 1: agentgateway.dev.resource.Resource.listener:type_name -> agentgateway.dev.resource.Listener
	5,  // 2: agentgateway.dev.resource.Resource.route:type_name -> agentgateway.dev.resource.Route
	0,  // 3: agentgateway.dev.resource.Listener.protocol:type_name -> agentgateway.dev.resource.Protocol
	4,  // 4: agentgateway.dev.resource.Listener.tls:type_name -> agentgateway.dev.resource.TLSConfig
	7,  // 5: agentgateway.dev.resource.Route.matches:type_name -> agentgateway.dev.resource.RouteMatch
	12, // 6: agentgateway.dev.resource.Route.filters:type_name -> agentgateway.dev.resource.RouteFilter
	18, // 7: agentgateway.dev.resource.Route.backends:type_name -> agentgateway.dev.resource.RouteBackend
	6,  // 8: agentgateway.dev.resource.Route.traffic_policy:type_name -> agentgateway.dev.resource.TrafficPolicy
	19, // 9: agentgateway.dev.resource.TrafficPolicy.backend_request_timeout:type_name -> google.protobuf.Duration
	19, // 10: agentgateway.dev.resource.TrafficPolicy.request_timeout:type_name -> google.protobuf.Duration
	8,  // 11: agentgateway.dev.resource.RouteMatch.path:type_name -> agentgateway.dev.resource.PathMatch
	11, // 12: agentgateway.dev.resource.RouteMatch.headers:type_name -> agentgateway.dev.resource.HeaderMatch
	10, // 13: agentgateway.dev.resource.RouteMatch.method:type_name -> agentgateway.dev.resource.MethodMatch
	9,  // 14: agentgateway.dev.resource.RouteMatch.query_params:type_name -> agentgateway.dev.resource.QueryMatch
	13, // 15: agentgateway.dev.resource.RouteFilter.request_header_modifier:type_name -> agentgateway.dev.resource.HeaderModifier
	13, // 16: agentgateway.dev.resource.RouteFilter.response_header_modifier:type_name -> agentgateway.dev.resource.HeaderModifier
	15, // 17: agentgateway.dev.resource.RouteFilter.request_redirect:type_name -> agentgateway.dev.resource.RequestRedirect
	16, // 18: agentgateway.dev.resource.RouteFilter.url_rewrite:type_name -> agentgateway.dev.resource.UrlRewrite
	14, // 19: agentgateway.dev.resource.RouteFilter.request_mirror:type_name -> agentgateway.dev.resource.RequestMirror
	17, // 20: agentgateway.dev.resource.HeaderModifier.add:type_name -> agentgateway.dev.resource.Header
	17, // 21: agentgateway.dev.resource.HeaderModifier.set:type_name -> agentgateway.dev.resource.Header
	12, // 22: agentgateway.dev.resource.RouteBackend.filters:type_name -> agentgateway.dev.resource.RouteFilter
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_resource_proto_init() }
func file_resource_proto_init() {
	if File_resource_proto != nil {
		return
	}
	file_resource_proto_msgTypes[0].OneofWrappers = []any{
		(*Resource_Bind)(nil),
		(*Resource_Listener)(nil),
		(*Resource_Route)(nil),
	}
	file_resource_proto_msgTypes[7].OneofWrappers = []any{
		(*PathMatch_Exact)(nil),
		(*PathMatch_PathPrefix)(nil),
		(*PathMatch_Regex)(nil),
	}
	file_resource_proto_msgTypes[8].OneofWrappers = []any{
		(*QueryMatch_Exact)(nil),
		(*QueryMatch_Regex)(nil),
	}
	file_resource_proto_msgTypes[10].OneofWrappers = []any{
		(*HeaderMatch_Exact)(nil),
		(*HeaderMatch_Regex)(nil),
	}
	file_resource_proto_msgTypes[11].OneofWrappers = []any{
		(*RouteFilter_RequestHeaderModifier)(nil),
		(*RouteFilter_ResponseHeaderModifier)(nil),
		(*RouteFilter_RequestRedirect)(nil),
		(*RouteFilter_UrlRewrite)(nil),
		(*RouteFilter_RequestMirror)(nil),
	}
	file_resource_proto_msgTypes[13].OneofWrappers = []any{
		(*RequestMirror_Service)(nil),
	}
	file_resource_proto_msgTypes[14].OneofWrappers = []any{
		(*RequestRedirect_Full)(nil),
		(*RequestRedirect_Prefix)(nil),
	}
	file_resource_proto_msgTypes[15].OneofWrappers = []any{
		(*UrlRewrite_Full)(nil),
		(*UrlRewrite_Prefix)(nil),
	}
	file_resource_proto_msgTypes[17].OneofWrappers = []any{
		(*RouteBackend_Service)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_proto_rawDesc), len(file_resource_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_resource_proto_goTypes,
		DependencyIndexes: file_resource_proto_depIdxs,
		EnumInfos:         file_resource_proto_enumTypes,
		MessageInfos:      file_resource_proto_msgTypes,
	}.Build()
	File_resource_proto = out.File
	file_resource_proto_goTypes = nil
	file_resource_proto_depIdxs = nil
}
