[package]
name = "agent-proxy"
version = "0.0.0"
edition = "2024"
rust-version = "1.85"

[lib]
path = "src/lib.rs"

[features]
default = ["tls-ring"]
tls-ring = ["dep:ring", "rustls/ring", "tokio-rustls/ring", "hyper-rustls/ring", "dep:rcgen"]

[dependencies]
agent-core  = { workspace = true }
agent-hbone  = { workspace = true }

# Enabled with 'tls-ring'
ring = { workspace = true, optional = true }

anyhow = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true, features = ["serde"] }
futures-core = { workspace = true }
futures-util = { workspace = true }
http-body = { workspace = true }
http-body-util = { workspace = true }
hyper = { workspace = true, features = ["full"] }
hyper-rustls = { workspace = true, features = ["logging", "http1", "http2"] }
hyper-util = { workspace = true, features = ["full"] }
ipnet = { workspace = true, features = ["serde"] }
itertools = { workspace = true }
prometheus-client = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
rand = { workspace = true, features = ["small_rng"] }
rcgen = { workspace = true, features = ["pem"], optional = true }
rustls = { workspace = true, features = ["tls12"] }
rustls-pemfile = { workspace = true }
serde = { workspace = true, features = ["derive", "rc"] }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full", "test-util"] }
tokio-rustls = { workspace = true }
tokio-stream = { workspace = true, features = ["net", "sync"] }
tonic = { workspace = true, features = ["prost", "codegen", "transport"] }
tower = { workspace = true, features = ["full"] }
tracing = { workspace = true }
url = { workspace = true }
pin-project-lite = { workspace = true }
http = { workspace = true }
axum-core = { workspace = true }
regex = { workspace = true }
serde_regex = { workspace = true }
hex = { workspace = true }
minijinja = { workspace = true, features = ["loader"] }

[build-dependencies]
tonic-build = { workspace = true, features = ["prost", "transport"] }
prost-build = { workspace = true }
anyhow = { workspace = true }


[dev-dependencies]
rcgen = { workspace = true, features = ["pem", "x509-parser"] }

[lints.clippy]
# This rule makes code more confusing
assigning_clones = "allow"
# This doesn't understand `strng` which we use everywhere
borrow_interior_mutable_const = "allow"
declare_interior_mutable_const = "allow"
